<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pp.goods.mapper.MemberGiftDomainMapper" >
  <resultMap id="BaseResultMap" type="com.pp.goods.domain.MemberGiftDomain" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="gift_id" property="giftId" jdbcType="VARCHAR" />
    <result column="gift_name" property="giftName" jdbcType="VARCHAR" />
    <result column="gift_num" property="giftNum" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="VARCHAR" />
    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
    <result column="address_id" property="addressId" jdbcType="VARCHAR" />
    <result column="contact_name" property="contactName" jdbcType="VARCHAR" />
    <result column="contact_phone" property="contactPhone" jdbcType="VARCHAR" />
    <result column="address_detail" property="addressDetail" jdbcType="VARCHAR" />
    <result column="create_code" property="createCode" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_code" property="modifyCode" jdbcType="VARCHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="has_deleted" property="hasDeleted" jdbcType="BIT" />

    <result column="file_id" property="fileId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, status, gift_id, gift_name, gift_num, member_id, member_name, address_id, contact_name, 
    contact_phone, address_detail, create_code, create_time, modify_code, modify_time, 
    has_deleted
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pp.goods.domain.MemberGiftDomainExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    , file_id
    from
    (
    select mg.*, fl.file_id from t_pp_member_gift mg
    left join t_pp_file_link fl on fl.ref_id = mg.gift_id
    ) t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    , file_id
    from
    (
    select mg.*, fl.file_id from t_pp_member_gift mg
    left join t_pp_file_link fl on fl.ref_id = mg.gift_id
    ) t
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_pp_member_gift
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.pp.goods.domain.MemberGiftDomain" >
    insert into t_pp_member_gift (id, status, gift_id, 
      gift_name, gift_num, member_id, 
      member_name, address_id, contact_name, 
      contact_phone, address_detail, create_code, 
      create_time, modify_code, modify_time, 
      has_deleted)
    values (#{id,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{giftId,jdbcType=VARCHAR}, 
      #{giftName,jdbcType=VARCHAR}, #{giftNum,jdbcType=INTEGER}, #{memberId,jdbcType=VARCHAR}, 
      #{memberName,jdbcType=VARCHAR}, #{addressId,jdbcType=VARCHAR}, #{contactName,jdbcType=VARCHAR}, 
      #{contactPhone,jdbcType=VARCHAR}, #{addressDetail,jdbcType=VARCHAR}, #{createCode,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyCode,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{hasDeleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.pp.goods.domain.MemberGiftDomain" >
    insert into t_pp_member_gift
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="giftId != null" >
        gift_id,
      </if>
      <if test="giftName != null" >
        gift_name,
      </if>
      <if test="giftNum != null" >
        gift_num,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="memberName != null" >
        member_name,
      </if>
      <if test="addressId != null" >
        address_id,
      </if>
      <if test="contactName != null" >
        contact_name,
      </if>
      <if test="contactPhone != null" >
        contact_phone,
      </if>
      <if test="addressDetail != null" >
        address_detail,
      </if>
      <if test="createCode != null" >
        create_code,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyCode != null" >
        modify_code,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="hasDeleted != null" >
        has_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="giftId != null" >
        #{giftId,jdbcType=VARCHAR},
      </if>
      <if test="giftName != null" >
        #{giftName,jdbcType=VARCHAR},
      </if>
      <if test="giftNum != null" >
        #{giftNum,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null" >
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null" >
        #{addressId,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null" >
        #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="addressDetail != null" >
        #{addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="createCode != null" >
        #{createCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyCode != null" >
        #{modifyCode,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hasDeleted != null" >
        #{hasDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pp.goods.domain.MemberGiftDomainExample" resultType="java.lang.Integer" >
    select count(*) from t_pp_member_gift
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.pp.goods.domain.MemberGiftDomain" >
    update t_pp_member_gift
    <set >
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="giftId != null" >
        gift_id = #{giftId,jdbcType=VARCHAR},
      </if>
      <if test="giftName != null" >
        gift_name = #{giftName,jdbcType=VARCHAR},
      </if>
      <if test="giftNum != null" >
        gift_num = #{giftNum,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null" >
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null" >
        address_id = #{addressId,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null" >
        contact_name = #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        contact_phone = #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="addressDetail != null" >
        address_detail = #{addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="createCode != null" >
        create_code = #{createCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyCode != null" >
        modify_code = #{modifyCode,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hasDeleted != null" >
        has_deleted = #{hasDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pp.goods.domain.MemberGiftDomain" >
    update t_pp_member_gift
    set status = #{status,jdbcType=VARCHAR},
      gift_id = #{giftId,jdbcType=VARCHAR},
      gift_name = #{giftName,jdbcType=VARCHAR},
      gift_num = #{giftNum,jdbcType=INTEGER},
      member_id = #{memberId,jdbcType=VARCHAR},
      member_name = #{memberName,jdbcType=VARCHAR},
      address_id = #{addressId,jdbcType=VARCHAR},
      contact_name = #{contactName,jdbcType=VARCHAR},
      contact_phone = #{contactPhone,jdbcType=VARCHAR},
      address_detail = #{addressDetail,jdbcType=VARCHAR},
      create_code = #{createCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_code = #{modifyCode,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      has_deleted = #{hasDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>